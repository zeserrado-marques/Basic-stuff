/*
 * Macro to count phytoplankton on a single image. Works only in an open image.
 * 
 * Please cite Fiji and Yen thresholding method if you use this macro in your research.
 * 
 * Also, please acknowledge me for using the macro. Many thanks :D
 * 
 * José Serrado Marques
 * 2022-05-13
 * jpmarques@igc.gulbenkian.pt
 * 
 */

// variables
min_circ = 0.80;

// initialize
run("Set Scale...", "distance=732.2213 known=100 unit=um global"); // measured from 10µm scale on a 40x objective
img = getTitle();
img_name = File.getNameWithoutExtension(img);
run("Set Measurements...", "area mean standard perimeter fit shape redirect=" + img + " decimal=4");
getPixelSize(unit, pixelWidth, pixelHeight);

// run color threshold
run("Duplicate...", "duplicate");
colorThreshold();

// binary operations
run("Fill Holes");
run("Open");

// calibrate binary image
Stack.setXUnit(unit);
run("Properties...", "pixel_width=" + pixelWidth + " pixel_height=" + pixelHeight);

// analyze particles
run("Analyze Particles...", "size=20-100 circularity=" + min_circ + "-1.00 show=Masks display exclude clear summarize add");
mask_img = getTitle();

n = roiManager("count");
for (i = 0; i < n; i++) {
	roiManager("select", i);
	roiManager("rename", "phyto_" + (i+1));
	setResult("Image Name", i, img_name + "_phyto_" + (i+1));
}

selectWindow(img);
roiManager("deselect");
roiManager("show all");

//selectWindow(img);





function colorThreshold() {
// creates binary mask from RGB image. this replaces color deconvolution and thresholding
// Color Thresholder 2.3.0/1.53q
// Autogenerated macro, single images only!
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("RGB Stack");
run("Convert Stack to Images");
selectWindow("Red");
rename("0");
selectWindow("Green");
rename("1");
selectWindow("Blue");
rename("2");
min[0]=0;
max[0]=114;
filter[0]="pass";
min[1]=0;
max[1]=112;
filter[1]="pass";
min[2]=0;
max[2]=100;
filter[2]="pass";
for (i=0;i<3;i++){
  selectWindow(""+i);
  setThreshold(min[i], max[i]);
  run("Convert to Mask");
  if (filter[i]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
rename(a);
// Colour Thresholding-------------
}
